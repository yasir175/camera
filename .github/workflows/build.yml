name: Build Android App

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git libssl-dev libffi-dev python3-dev openjdk-11-jdk zip unzip
        pip install --upgrade pip
        pip install buildozer python-for-android cython

    - name: Install Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip
        mv cmdline-tools/* .  # Move the unzipped contents to the expected directory
        rm -rf cmdline-tools  # Clean up
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --licenses
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-31" "build-tools;30.0.3" "build-tools;35.0.0"

    - name: Set up Android SDK environment
      run: |
        echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "export PATH=$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

    - name: Clean Buildozer
      run: buildozer android clean || true

    - name: Build Android App
      run: buildozer -v android debug | tee build_output.log

    - name: Check for APK
      run: ls -R ./bin  # List files to ensure APK is built

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: my-android-app
        path: ./bin/*.apk  # Ensure this path is correct
        if-no-files-found: warn
        include-hidden-files: false
